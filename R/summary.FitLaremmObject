summary.FitLaremmObject <- function(object,...){
  if(object$call$object_type == "mxModel"){
    # get fit measures
    m2LL <- object$`fit measures`[which(object$`fit measures`[,"penalty"] == object$`best penalty`), "m2LL"]
    AIC <- object$`fit measures`[which(object$`fit measures`[,"penalty"] == object$`best penalty`), "AIC"]
    BIC <- object$`fit measures`[which(object$`fit measures`[,"penalty"] == object$`best penalty`), "BIC"]
    if(object$call$CV){
      CV_m2LL <- object$`fit measures`[which(object$`fit measures`[,"penalty"] == object$`best penalty`), "CV m2LL"]
    }else{CV_m2LL <- NA}

    estimatedParameters <- object$`fit measures`[which(object$`fit measures`[,"penalty"] == object$`best penalty`), "estimated Parameters"]
    convergence <- if(any(!object$`fit measures`[,"convergence"] ==0)){"Problems with convergence occured"}else{"No convergence problems"}
    negativeVariances <- if(any(!object$`fit measures`[,"negative variances"] ==0)){"Negative variances occured"}else{"No negative variances"}

    # get parameters
    # A
    parNames <- c(object$bestobject$manifestVars, object$bestobject$latentVars)
    Aparam <- round(object$bestobject$A$values[object$bestobject$A$free], 3)
    expLabel <- matrix(NA, ncol = ncol(object$bestobject$A$values), nrow = nrow(object$bestobject$A$values))
    for(row in 1:nrow(expLabel)){
      for(col in 1:ncol(expLabel)){
        expLabel[row,col] = paste(parNames[col] , "->", parNames[row])
      }
    }
    labels <- object$bestobject$A$labels[object$bestobject$A$free]
    if(any(!is.na(labels))){
      AparMat <- matrix(c(expLabel[object$bestobject$A$free],labels, Aparam), nrow = length(expLabel[object$bestobject$A$free]), ncol = 3)

    }else{
      AparMat <- matrix(c(expLabel[object$bestobject$A$free], Aparam), nrow = length(expLabel[object$bestobject$A$free]), ncol = 2)
    }

    # S
    Sparam <- round(object$bestobject$S$values[object$bestobject$S$free], 3)
    expLabel <- matrix(NA, ncol = ncol(object$bestobject$S$values), nrow = nrow(object$bestobject$S$values))
    for(row in 1:nrow(expLabel)){
      for(col in 1:ncol(expLabel)){
        expLabel[row,col] = paste(parNames[col] , "<->", parNames[row])
      }
    }
    Slabels <- object$bestobject$S$labels[object$bestobject$S$free]
    if(any(!is.na(Slabels))){
      SparMat <- matrix(c(expLabel[object$bestobject$S$free],Slabels, Sparam), nrow = length(expLabel[object$bestobject$S$free]), ncol = 3)

    }else{
      SparMat <- matrix(c(expLabel[object$bestobject$S$free], Sparam), nrow = length(expLabel[object$bestobject$S$free]), ncol = 2)
    }
    # M
    if(any(object$bestobject$M$free)){
      Mparam <- round(object$bestobject$M$values[object$bestobject$M$free], 3)
      expLabel <- matrix(NA, ncol = ncol(object$bestobject$M$values), nrow = nrow(object$bestobject$M$values))
      for(row in 1:nrow(expLabel)){
        for(col in 1:ncol(expLabel)){
          expLabel[row,col] = paste("intercept", parNames[col])
        }
      }
      Mlabels <- object$bestobject$M$labels[object$bestobject$M$free]
      if(any(!is.na(Mlabels))){
        MparMat <- matrix(c(expLabel[object$bestobject$M$free],Mlabels, Mparam), nrow = length(expLabel[object$bestobject$M$free]), ncol = 3)

      }else{
        MparMat <- matrix(c(expLabel[object$bestobject$M$free], Mparam), nrow = length(expLabel[object$bestobject$M$free]), ncol = 2)
      }
    }
    if(any(object$bestobject$M$free)){
    retList <- list(
      "object type" = object$call$object_type,
      "penalty value" = paste("Best penalty value based on", object$call$fit_index ,"was" , object$`best penalty`),
      "A-parameter" = AparMat,
      "S-pararameter" = SparMat,
      "M-parameters" = MparMat,
      "m2LL" = m2LL,
      "AIC" = AIC,
      "BIC" = BIC,
      "CV m2LL" =  CV_m2LL,
      "estimated parameters" = estimatedParameters,
      "negative variances" = negativeVariances,
      "convergence" = convergence


      )
    }else{
      retList <- cbind(
        "object type" = object$call$object_type,
        "penalty value" = paste("Best penalty value based on", object$call$fit_index ,"was" , object$`best penalty`),
        "A-parameter" = AparMat,
        "S-pararameter" = SparMat,
        #"M-parameters" = MparMat,
        "m2LL" = m2LL,
        "AIC" = AIC,
        "BIC" = BIC,
        "CV m2LL" =  CV_m2LL,
        "estimated parameters" = estimatedParameters,
        "negative variances" = negativeVariances,
        "convergence" = convergence

      )

    }

  }else if(object$call$object_type == "ctsem"){
    print("Not fully implemented. Elements can be accessed with object$bestobject$BaseModel...")
    Drift <- object$bestobject$BaseModel$DRIFT$values
    retList <- cbind(
      "object type" = object$call$object_type,
      "penalty value" = paste("Best penalty value based on", object$call$fit_index ,"was" , object$`best penalty`),
      "Drift" = Drift,
      "m2LL" = m2LL,
      "AIC" = AIC,
      "BIC" = BIC,
      "CV m2LL" =  CV_m2LL,
      "estimated parameters" = estimatedParameters,
      "negative variances" = negativeVariances,
      "convergence" = convergence

    )

  }



  class(retList) <- "summary.FitLaremmObject"
  print(retList)
}
